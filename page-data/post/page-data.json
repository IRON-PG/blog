{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-listing-index-tsx","path":"/post","result":{"pageContext":{"articles":[{"banner":{"alt":"You don't know JS","caption":null,"src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='660'%20height='400'%20viewBox='0%200%20660%20400'%20preserveAspectRatio='none'%3e%3cpath%20d='M519%2031c-47%2010-74%2042-74%2088%200%2029%208%2049%2028%2068%2014%2014%2028%2022%2067%2039%2042%2018%2052%2026%2051%2045%200%2021-17%2033-45%2033-29%200-46-10-67-40l-54%2032c0%202%208%2015%2016%2024%2026%2032%2075%2049%20124%2044%2049-6%2081-30%2091-69%203-9%204-32%202-42-6-42-29-63-96-92-38-16-47-23-50-38-5-22%2014-39%2038-35%2014%202%2024%209%2033%2022l5%205%2050-32c2-1%200-4-7-14a94%2094%200%200%200-63-38c-13-3-38-2-49%200m-198%202-1%20118-1%20125c-2%2012-8%2021-17%2025-8%204-27%203-34%200-8-4-14-10-21-20l-6-10a2910%202910%200%200%201-55%2032c0%205%2015%2025%2025%2034%2037%2035%20110%2037%20147%204%208-6%204-7-7-1-6%203-7%204-7%202-1-1%201-4%206-7l2-2-4-2c-3-2-4-3-4-5%200-3%201-3%208%202%208%204%2015%204%2018%201%203-5%2010-18%2012-25%206-19%206-12%206-147V33l-19-1-18%201%208%204c10%203%2011%205%201%208l-6%203%206%203c6%202%207%203%207%205s-1%202-11%205c-13%205-12%205-12%202%200-2%201-3%206-5%206-2%206-3%200-5-5-1-5-2-5-4%200-3%200-4%204-5%205-2%208-4%205-4s-10-3-10-5l-2-2h-21m28%2036c-6%204-7%2010-4%2016%207%2013%2026%204%2022-10-2-7-12-11-18-6m2%205c-6%204-3%2012%204%2012%204%200%208-3%208-7%200-3-4-7-7-7l-5%202m-7%2025c0%202%200%202%207%202l6%201-6%205c-6%204-8%208-6%2010l11%201c10%200%2011-1%2011-3s-1-3-6-3c-8%200-8%200-1-6%206-4%207-5%207-7v-3h-23v3m0%2026c0%202%201%204%204%206%205%204%205%205%200%205-3%200-4%201-4%203l1%202h22v-2c0-3%200-3-3-3-6%200-6-2-1-6%203-2%204-4%204-6%200-3%200-3-7%202l-6%204-4-4c-5-5-6-5-6-1m1%2030-1%209c0%207%200%208%202%208%201%200%202-1%202-3l1-2%209-1c9%200%209%200%209-2%200-3%200-3-9-3h-9l-1-4c0-3-2-4-3-2m0%2030c-2%201-1%204%201%204h6c7-1%206%201-2%207-4%204-6%206-6%208v2h23v-2c0-3%200-3-6-3l-7-1%207-6c5-3%206-5%206-7v-2l-11-1-11%201m8%2026c-13%203-12%2022%201%2024%2016%201%2019-21%203-24h-4m-3%207c-4%204-1%2012%206%2012l4-2c6-4%203-12-4-12l-6%202m0%2022c-5%202-6%205-6%2013l1%207h22v-7c0-8-2-12-7-14-4-1-6-1-10%201m2%204c-2%201-5%206-4%208s3%202%208%202h7v-3c0-5-6-9-11-7m-8%2032c0%202%201%203%209%203%208%201%2010%201%2010%205%200%203-4%205-12%205-7%200-7%200-7%202%201%204%2016%204%2020%200s5-10%200-14c-3-4-20-4-20-1m6%2023c-8%205-9%2017-1%2022s18-1%2018-10c0-10-9-16-17-12m1%206c-6%204-3%2012%204%2012%204%200%208-3%208-7%200-6-8-9-12-5M43%20358c-2%200-2%206%200%2010v7h14c1-2-2-3-7-3-6%200-7-2-3-3s5-2%205-7-2-6-9-4m-27%202-1%207c0%207%202%2010%204%208h3c2%202%203%200%203-8%200-9%200-10-3-8h-3c0-2-3-1-3%201m45%202c0%205%201%206%205%206l2%201-3%201-2%202v3h8l3%201c2%200%203-1%203-9v-9h-3l-4%201h-7c-2-1-2-1-2%203m20-3v9h10l1-5v-4l-6-1-5%201m39%201c-4%204-1%209%204%209%203%200%206-3%206-6l1-2%201%204c0%203%200%204%202%204%201%200%202-6%200-9%200-2-3-2-4%200h-2c-2-3-6-2-8%200M0%20397v3h14c14%200%2014%200%2014-2s-1-3-14-3H0v2'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/blog/static/94b35ad54c45d183a6579a0e1368de1a/bc51f/you-dont-know.png","srcSet":"/blog/static/94b35ad54c45d183a6579a0e1368de1a/41200/you-dont-know.png 165w,\n/blog/static/94b35ad54c45d183a6579a0e1368de1a/f979a/you-dont-know.png 330w,\n/blog/static/94b35ad54c45d183a6579a0e1368de1a/bc51f/you-dont-know.png 660w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/blog/static/94b35ad54c45d183a6579a0e1368de1a/322ad/you-dont-know.webp 165w,\n/blog/static/94b35ad54c45d183a6579a0e1368de1a/de3b3/you-dont-know.webp 330w,\n/blog/static/94b35ad54c45d183a6579a0e1368de1a/2b2b5/you-dont-know.webp 660w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<h1>Part 1 : 타입</h1>\n<h3>자바스크립트 타입</h3>\n<blockquote>\n<p>자바스크립트에서 어떤 값을 다른 값과 분별할 수 있는 고유한 특성 집합</p>\n</blockquote>\n<ul>\n<li>\n<p>변수는 타입이 없지만 값은 타입이 있다. (변수의 타입은 동적으로 변동될 수 있다.)</p>\n</li>\n<li>\n<p>primitive type: undefined, null, boolean, string, number, symbol</p>\n</li>\n<li>\n<p>null : falsy(false와 다름없는) 한 원시값이지만, 타입은 object 이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n<li>\n<p>function : object 타입의 하위 타입으로 호출가능한 객체이다.</p>\n<ul>\n<li>\n<p>function 객체의 length는 인자값의 개수를 의미한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\na<span class=\"token punctuation\">.</span>length <span class=\"token comment\">// 2</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>typeof</p>\n<ul>\n<li>\n<p>선언되지 않은 변수에 대한 비교에서도 ReferenceError를 일으키지 않고 undefined를 리턴한다. (안전가드)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a <span class=\"token comment\">// \"undefined\"</span>\n<span class=\"token keyword\">typeof</span> b <span class=\"token comment\">// \"undefined\"</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h1>Part 2 : 값</h1>\n<h3>배열 주의할 점</h3>\n<ul>\n<li>\n<p>배열에 delete 연산을 통해 해당 인덱스값을 제거해도 배열의 length는 줄어들지 않고 슬롯만 비워진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span><span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">delete</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// // [ 1, 비어있음, 3 ]</span></code></pre></div>\n</li>\n<li>\n<p>배열도 object 타입이기 때문에 프로퍼티를 추가할 수 있으나, 프로퍼티 키값이 10진수 숫자면 인덱스로 인식하게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\na<span class=\"token punctuation\">.</span>length <span class=\"token comment\">// 1</span>\na<span class=\"token punctuation\">[</span><span class=\"token string\">'13'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span>length <span class=\"token comment\">// 14</span></code></pre></div>\n</li>\n</ul>\n<h3>문자열 주의할 점</h3>\n<ul>\n<li>문자열은 문자배열과 달리 불변값이다.</li>\n<li>문자열 메서드는 내용을 변경하지 않고 항상 새로운 문자열을 반환한다.</li>\n</ul>\n<h3>숫자 주의할 점</h3>\n<ul>\n<li>\n<p>숫자 값은 Number 객체로 래퍼로 박싱될 수 있기 때문에 Number.prototype 메소드 접근가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">43.56</span><span class=\"token punctuation\">;</span>\n\na<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">toPrecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">25.</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">0.25</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>정수의 최대 표현 범위 <code class=\"language-text\">Number.MIN_SAVE_INTEGER</code> ~ <code class=\"language-text\">Number.MAX_SAVE_INTEGER</code>는 -9천조 ~ 9천 조이다.</p>\n</li>\n</ul>\n<h3>undefined vs null</h3>\n<ul>\n<li>undefined 타입\n<ul>\n<li>값은 undefined 만 있음</li>\n<li>값이 할당되지 않은 상태</li>\n<li>typeof undefined  ⇒ “undefined”</li>\n</ul>\n</li>\n<li>null 타입\n<ul>\n<li>값은 null만 있음</li>\n<li>값이 있었지만 현재는 없는 상태</li>\n<li>typeof null ⇒ “object”</li>\n</ul>\n</li>\n</ul>\n<h3>NaN</h3>\n<ul>\n<li>Not A Number의 약자로 유효하지 않은 숫자를 의미한다</li>\n<li>그러나 typeof로 확인해보면 “number” 타입이다..</li>\n<li>Number.isNaN이나 ES6에서부터는 Object.is 내장함수를 통해서 값을 비교할 수 있다.</li>\n</ul>\n<h3>값 vs 레퍼런스</h3>\n<ul>\n<li>\n<p>null, undefined, string, number, bollean, symbol은 값-복사 방식으로 동작, 그 외 object는 공유한 값을 가리키도록 하는 레퍼런스 복사로 동작한다.</p>\n</li>\n<li>\n<p>자바스크립트에서는 포인터의 개념이 없기 때문에 한 변수가 다른 변수를 참조할 수 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n\nb<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// b로 a가 가리키고 있는 값을 바꿀 수 없다.</span>\n\na <span class=\"token comment\">// [1, 2, 3, 4]</span>\nb <span class=\"token comment\">// [4, 5, 6]</span></code></pre></div>\n</li>\n</ul>","categories":["GOODTSS"],"date":"October 22, 2022","description":"Part1, Part2 정리","id":"6ee4d520-1f25-51b8-90d7-22e5f65561d6","keywords":null,"slug":"/GOODTSS/day01/","title":"You don't Know JS Study-01","readingTime":{"text":"4 min read"}}]}},"staticQueryHashes":["1094019748","4239582004"]}